name: Create Release

on:
  push:
    branches: [ SonarScanner ]
    tags: 
      - "v*"
  pull_request:
    branches: [ SonarScanner ]

jobs:
  sonar_scanner:
    name: Create Release from code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup sonar scanner
        uses: warchant/setup-sonar-scanner@v1
      # Another existing action, this one to checkout the repository
      - name: 'Checkout repository on branch: ${{ github.REF }}'
        uses: actions/checkout@v1
        with:
          ref: ${{ github.REF }}
          fetch-depth: 0
      - run: dotnet tool install --global dotnet-sonarscanner --version 4.8.0
     
     # Conditional execution can be done, in this case the parameter to use with sonar scanner are different if we are analyzing master or a branch
#       - if: endsWith(github.REF, '/master') != true
#         name: 'Run an analysis of the ${{ github.REF }} branch'
#         env:
#           # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: sonar-scanner
#           -Dsonar.host.url=${{ secrets.SONAR_URL }}
#           -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#           -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
#           -Dsonar.branch.name=${GITHUB_REF:11}
#           -Dsonar.scm.provider=git
        
# jobs:
#   build_test_version:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest]

#     steps:
#     - uses: actions/checkout@v1
    
#     - name: Fetch all history for all tag and branches
#       run: git fetch --prune 

      
#     - name: Setup .NET Core
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: 3.1.301
#     - run: |
#         dotnet --version
                       
#     - name: Install dependencies
#       run: dotnet restore
#     - name: Build
#       run: dotnet build --configuration Release --no-restore
#     - name: Test
#       run: dotnet test --no-restore --verbosity normal
    
#     - name: Install git version
#       uses: gittools/actions/gitversion/setup@v0.9.2
#       with:
#        versionSpec: '5.2.x'
    
#     - name: Use GitVersion
#       id: gitversion # step id used as reference for output values
#       uses: gittools/actions/gitversion/execute@v0.9.2
#     - run: |
#         echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
#         echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
#         echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
#         echo "Sha: ${{ steps.gitversion.outputs.sha }}"

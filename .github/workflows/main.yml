name: .NET Core

on:
  push:
    branches: [ master ]
    tags: 
      - "v*"
  pull_request:
    branches: [ master ]

jobs:
  build_test_version:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v1
    
    - name: Fetch all history for all tag and branches
      run: git fetch --prune 

      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - run: |
        dotnet --version
                       
    - name: Install dependencies1
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
  
  sonar_scanner:
    needs: build_test_version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code for scanning
        uses: actions/checkout@v1

      - name: Checking MSBuild
        run: |
          dotnet add package coverlet.collector
          dotnet tool install --global dotnet-sonarscanner 
          dotnet sonarscanner begin  /k:${{ secrets.PROJECT_KEY }} /o:${{ secrets.ORG_KEY }} /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login=${{ secrets.SONAR_TOKEN }} /d:sonar.cs.xunit.reportsPaths="./XUnitResults.xml"
          dotnet build ./xunit_practice_two.sln
          dotnet test --collect:"XPlat Code Coverage"
          packages\xunit.runner.console.2.1.0\tools\xunit.console.exe XUnitProject1\bin\Debug\XUnitProject1.dll -xml .\XUnitResults.xml
          dotnet sonarscanner end         
        env:
          GITHUB_TOKEN: ${{ secrets.MYGITHUB_TOKEN }}
          
      - name: Install git version
        uses: gittools/actions/gitversion/setup@v0.9.2
        with:
         versionSpec: '5.2.x'

      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.2
      - run: |
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
          echo "Sha: ${{ steps.gitversion.outputs.sha }}"
      - name: Build the docker image
        run: docker build . --file Dockerfile --tag sysdiglabs/dotnet-dockerimage:latest
    
